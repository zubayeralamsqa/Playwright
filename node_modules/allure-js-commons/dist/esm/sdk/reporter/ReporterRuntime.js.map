{"version":3,"file":"ReporterRuntime.js","names":["extname","Stage","LifecycleState","Notifier","createFixtureResult","createStepResult","createTestResult","hasSkipLabel","deepClone","formatLinks","getTestResultHistoryId","getTestResultTestCaseId","randomUuid","buildAttachmentFileName","resolveWriter","DefaultStepStack","constructor","_defineProperty","Map","stepsByRoot","clear","rootsByStep","rootUuid","maybeValue","get","delete","forEach","stepUuid","length","set","push","removeStep","newValue","filter","value","_handleMetadataMessage","WeakMap","_handleStepMetadataMessage","_handleStartStepMessage","_handleStopStepMessage","_handleAttachmentContentMessage","_handleAttachmentPathMessage","_findParent","_writeFixturesOfScope","_writeContainer","_calculateTimings","ReporterRuntime","_ref","_this","writer","listeners","environmentInfo","categories","links","uuid","state","setScope","updateFunc","scope","getScope","console","error","concat","_classPrivateFieldGet","call","deleteScope","scopeUuid","type","fixtureResult","wrappedFixture","setFixtureResult","_objectSpread","start","Date","now","fixtures","fixture","getFixtureResult","opts","startStop","stop","duration","stage","FINISHED","result","scopeUuids","arguments","undefined","testResult","notifier","beforeTestResultStart","tests","setTestResult","afterTestResultStart","getTestResult","beforeTestResultUpdate","afterTestResultUpdate","_testResult$testCaseI","_testResult$historyId","wrapped","getWrappedTestResult","beforeTestResultStop","testCaseId","historyId","labels","parameters","description","_testResult$descripti","descriptionHtml","_testResult$descripti2","afterTestResultStop","deleteTestResult","beforeTestResultWrite","writeResult","afterTestResultWrite","stepStack","currentStep","parentStepUuid","parent","JSON","stringify","stepResult","steps","setStepResult","addStep","step","getStepResult","beforeStepStop","afterStepStop","attachmentName","attachmentContentOrPath","options","_options$fileExtensio","isPath","fileExtension","attachmentFileName","contentType","writeAttachmentFromPath","writeAttachment","attachment","name","source","wrapInStep","timestamp","attachments","writeEnvironmentInfo","serializedCategories","map","c","messageRegex","RegExp","traceRegex","writeCategoriesDefinitions","messages","message","data","_classPrivateFieldInitSpec","getWrappedFixtureResult","displayName","updateFixture","updateScope","linkConfig","updateTest","updateStep","startStep","status","statusDetails","stopStep","Buffer","from","content","encoding","path","root","getExecutionItem","_ref2","writtenFixtures","Set","has","deleteFixtureResult","add","befores","afters","writeGroup","children","normalisedDuration","Math","max","round"],"sources":["../../../../src/sdk/reporter/ReporterRuntime.ts"],"sourcesContent":["/* eslint max-lines: 0 */\nimport { extname } from \"path\";\nimport {\n  type Attachment,\n  type AttachmentOptions,\n  type FixtureResult,\n  Stage,\n  type StepResult,\n  type TestResult,\n} from \"../../model.js\";\nimport type {\n  Category,\n  EnvironmentInfo,\n  RuntimeAttachmentContentMessage,\n  RuntimeAttachmentPathMessage,\n  RuntimeMessage,\n  RuntimeMetadataMessage,\n  RuntimeStartStepMessage,\n  RuntimeStepMetadataMessage,\n  RuntimeStopStepMessage,\n} from \"../types.js\";\nimport { LifecycleState } from \"./LifecycleState.js\";\nimport { Notifier } from \"./Notifier.js\";\nimport { createFixtureResult, createStepResult, createTestResult } from \"./factory.js\";\nimport { hasSkipLabel } from \"./testplan.js\";\nimport type {\n  FixtureResultWrapper,\n  FixtureType,\n  LinkConfig,\n  ReporterRuntimeConfig,\n  TestScope,\n  Writer,\n} from \"./types.js\";\nimport { deepClone, formatLinks, getTestResultHistoryId, getTestResultTestCaseId, randomUuid } from \"./utils.js\";\nimport { buildAttachmentFileName } from \"./utils/attachments.js\";\nimport { resolveWriter } from \"./writer/loader.js\";\n\ninterface StepStack {\n  clear(): void;\n\n  removeRoot(rootUuid: string): void;\n\n  currentStep(rootUuid: string): string | undefined;\n\n  addStep(rootUuid: string, stepUuid: string): void;\n\n  removeStep(stepUuid: string): void;\n}\n\nclass DefaultStepStack implements StepStack {\n  private stepsByRoot: Map<string, string[]> = new Map();\n  private rootsByStep: Map<string, string> = new Map();\n\n  clear = (): void => {\n    this.stepsByRoot.clear();\n    this.rootsByStep.clear();\n  };\n\n  removeRoot = (rootUuid: string): void => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    this.stepsByRoot.delete(rootUuid);\n    if (maybeValue) {\n      maybeValue.forEach((stepUuid) => this.rootsByStep.delete(stepUuid));\n    }\n  };\n\n  currentStep = (rootUuid: string): string | undefined => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      return;\n    }\n    return maybeValue[maybeValue.length - 1];\n  };\n\n  addStep = (rootUuid: string, stepUuid: string): void => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      this.stepsByRoot.set(rootUuid, [stepUuid]);\n    } else {\n      maybeValue.push(stepUuid);\n    }\n    this.rootsByStep.set(stepUuid, rootUuid);\n  };\n\n  removeStep(stepUuid: string) {\n    const rootUuid = this.rootsByStep.get(stepUuid);\n    if (!rootUuid) {\n      return;\n    }\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      return;\n    }\n    const newValue = maybeValue.filter((value) => value !== stepUuid);\n    this.stepsByRoot.set(rootUuid, newValue);\n  }\n}\n\nexport class ReporterRuntime {\n  private readonly state = new LifecycleState();\n  private notifier: Notifier;\n  private stepStack: StepStack = new DefaultStepStack();\n  writer: Writer;\n  categories?: Category[];\n  environmentInfo?: EnvironmentInfo;\n  linkConfig?: LinkConfig;\n\n  constructor({ writer, listeners = [], environmentInfo, categories, links }: ReporterRuntimeConfig) {\n    this.writer = resolveWriter(writer);\n    this.notifier = new Notifier({ listeners });\n    this.categories = categories;\n    this.environmentInfo = environmentInfo;\n    this.linkConfig = links;\n  }\n\n  startScope = (): string => {\n    const uuid = randomUuid();\n    this.state.setScope(uuid);\n    return uuid;\n  };\n\n  updateScope = (uuid: string, updateFunc: (scope: TestScope) => void): void => {\n    const scope = this.state.getScope(uuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not update scope: no scope with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(scope);\n  };\n\n  writeScope = (uuid: string) => {\n    const scope = this.state.getScope(uuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not write scope: no scope with uuid ${uuid} is found`);\n      return;\n    }\n\n    this.#writeFixturesOfScope(scope);\n    this.state.deleteScope(scope.uuid);\n  };\n\n  startFixture = (scopeUuid: string, type: FixtureType, fixtureResult: Partial<FixtureResult>): string | undefined => {\n    const scope = this.state.getScope(scopeUuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not start fixture: no scope with uuid ${scopeUuid} is found`);\n      return;\n    }\n\n    const uuid = randomUuid();\n    const wrappedFixture = this.state.setFixtureResult(scopeUuid, uuid, type, {\n      ...createFixtureResult(),\n      start: Date.now(),\n      ...fixtureResult,\n    });\n\n    scope.fixtures.push(wrappedFixture);\n    return uuid;\n  };\n\n  updateFixture = (uuid: string, updateFunc: (result: FixtureResult) => void): void => {\n    const fixture = this.state.getFixtureResult(uuid);\n\n    if (!fixture) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update fixture: no fixture with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(fixture);\n  };\n\n  stopFixture = (uuid: string, opts?: { stop?: number; duration?: number }): void => {\n    const fixture = this.state.getFixtureResult(uuid);\n    if (!fixture) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop fixture: no fixture with uuid ${uuid} is found`);\n      return;\n    }\n\n    const startStop = this.#calculateTimings(fixture.start, opts?.stop, opts?.duration);\n    fixture.start = startStop.start;\n    fixture.stop = startStop.stop;\n\n    fixture.stage = Stage.FINISHED;\n  };\n\n  startTest = (result: Partial<TestResult>, scopeUuids: string[] = []): string => {\n    const uuid = randomUuid();\n    const testResult: TestResult = {\n      ...createTestResult(uuid),\n      start: Date.now(),\n      ...deepClone(result),\n    };\n\n    this.notifier.beforeTestResultStart(testResult);\n\n    scopeUuids.forEach((scopeUuid) => {\n      const scope = this.state.getScope(scopeUuid);\n      if (!scope) {\n        // eslint-disable-next-line no-console\n        console.error(`count not link test to the scope: no scope with uuid ${uuid} is found`);\n        return;\n      }\n      scope.tests.push(uuid);\n    });\n\n    this.state.setTestResult(uuid, testResult, scopeUuids);\n    this.notifier.afterTestResultStart(testResult);\n    return uuid;\n  };\n\n  updateTest = (uuid: string, updateFunc: (result: TestResult) => void): void => {\n    const testResult = this.state.getTestResult(uuid);\n\n    if (!testResult) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update test result: no test with uuid ${uuid}) is found`);\n      return;\n    }\n\n    this.notifier.beforeTestResultUpdate(testResult);\n    updateFunc(testResult);\n    this.notifier.afterTestResultUpdate(testResult);\n  };\n\n  stopTest = (uuid: string, opts?: { stop?: number; duration?: number }) => {\n    const wrapped = this.state.getWrappedTestResult(uuid);\n    if (!wrapped) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop test result: no test with uuid ${uuid}) is found`);\n      return;\n    }\n\n    const testResult = wrapped.value;\n\n    this.notifier.beforeTestResultStop(testResult);\n    testResult.testCaseId ??= getTestResultTestCaseId(testResult);\n    testResult.historyId ??= getTestResultHistoryId(testResult);\n\n    const startStop = this.#calculateTimings(testResult.start, opts?.stop, opts?.duration);\n    testResult.start = startStop.start;\n    testResult.stop = startStop.stop;\n\n    const scopeUuids = wrapped.scopeUuids;\n    scopeUuids.forEach((scopeUuid) => {\n      const scope = this.state.getScope(scopeUuid);\n      if (scope?.labels) {\n        testResult.labels = [...testResult.labels, ...scope.labels];\n      }\n      if (scope?.links) {\n        testResult.links = [...testResult.links, ...scope.links];\n      }\n      if (scope?.parameters) {\n        testResult.parameters = [...testResult.parameters, ...scope.parameters];\n      }\n      if (scope?.description) {\n        testResult.description = testResult.description ?? scope.description;\n      }\n      if (scope?.descriptionHtml) {\n        testResult.descriptionHtml = testResult.descriptionHtml ?? scope.descriptionHtml;\n      }\n    });\n\n    this.notifier.afterTestResultStop(testResult);\n  };\n\n  writeTest = (uuid: string) => {\n    const testResult = this.state.getTestResult(uuid);\n    if (!testResult) {\n      // eslint-disable-next-line no-console\n      console.error(`could not write test result: no test with uuid ${uuid} is found`);\n      return;\n    }\n\n    if (hasSkipLabel(testResult.labels)) {\n      this.state.deleteTestResult(uuid);\n      return;\n    }\n\n    this.notifier.beforeTestResultWrite(testResult);\n\n    this.writer.writeResult(testResult);\n    this.state.deleteTestResult(uuid);\n\n    this.notifier.afterTestResultWrite(testResult);\n  };\n\n  currentStep = (rootUuid: string): string | undefined => {\n    return this.stepStack.currentStep(rootUuid);\n  };\n\n  startStep = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n    result: Partial<StepResult>,\n  ): string | undefined => {\n    const parent = this.#findParent(rootUuid, parentStepUuid);\n    if (!parent) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `could not start test step: no context for root ${rootUuid} and parentStepUuid ${JSON.stringify(parentStepUuid)} is found`,\n      );\n      return;\n    }\n    const stepResult: StepResult = {\n      ...createStepResult(),\n      start: Date.now(),\n      ...result,\n    };\n    parent.steps.push(stepResult);\n    const stepUuid = randomUuid();\n    this.state.setStepResult(stepUuid, stepResult);\n\n    this.stepStack.addStep(rootUuid, stepUuid);\n\n    return stepUuid;\n  };\n\n  updateStep = (uuid: string, updateFunc: (stepResult: StepResult) => void) => {\n    const step = this.state.getStepResult(uuid)!;\n    if (!step) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update test step: no step with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(step);\n  };\n\n  stopStep = (uuid: string, opts?: { stop?: number; duration?: number }) => {\n    const step = this.state.getStepResult(uuid);\n    if (!step) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop test step: no step with uuid ${uuid} is found`);\n      return;\n    }\n\n    this.notifier.beforeStepStop(step);\n\n    const startStop = this.#calculateTimings(step.start, opts?.stop, opts?.duration);\n    step.start = startStop.start;\n    step.stop = startStop.stop;\n\n    step.stage = Stage.FINISHED;\n\n    this.stepStack.removeStep(uuid);\n\n    this.notifier.afterStepStop(step);\n  };\n\n  writeAttachment = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n    attachmentName: string,\n    attachmentContentOrPath: Buffer | string,\n    options: AttachmentOptions & { wrapInStep?: boolean; timestamp?: number },\n  ) => {\n    const parent = this.#findParent(rootUuid, parentStepUuid);\n    if (!parent) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `could not write test attachment: no context for root ${rootUuid} and parentStepUuid ${JSON.stringify(parentStepUuid)} is found`,\n      );\n      return;\n    }\n\n    const isPath = typeof attachmentContentOrPath === \"string\";\n    const fileExtension = options.fileExtension ?? (isPath ? extname(attachmentContentOrPath) : undefined);\n    const attachmentFileName = buildAttachmentFileName({\n      contentType: options.contentType,\n      fileExtension,\n    });\n\n    if (isPath) {\n      this.writer.writeAttachmentFromPath(attachmentFileName, attachmentContentOrPath);\n    } else {\n      this.writer.writeAttachment(attachmentFileName, attachmentContentOrPath);\n    }\n\n    const attachment: Attachment = {\n      name: attachmentName,\n      source: attachmentFileName,\n      type: options.contentType,\n    };\n\n    if (options.wrapInStep) {\n      const { timestamp = Date.now() } = options;\n      parent.steps.push({\n        name: attachmentName,\n        attachments: [attachment],\n        start: timestamp,\n        stop: timestamp,\n      } as StepResult);\n    } else {\n      parent.attachments.push(attachment);\n    }\n  };\n\n  writeEnvironmentInfo = () => {\n    if (!this.environmentInfo) {\n      return;\n    }\n\n    this.writer.writeEnvironmentInfo(this.environmentInfo);\n  };\n\n  writeCategoriesDefinitions = () => {\n    if (!this.categories) {\n      return;\n    }\n\n    const serializedCategories = this.categories.map((c) => {\n      if (c.messageRegex instanceof RegExp) {\n        c.messageRegex = c.messageRegex.source;\n      }\n\n      if (c.traceRegex instanceof RegExp) {\n        c.traceRegex = c.traceRegex.source;\n      }\n\n      return c;\n    });\n\n    this.writer.writeCategoriesDefinitions(serializedCategories);\n  };\n\n  applyRuntimeMessages = (rootUuid: string, messages: RuntimeMessage[]) => {\n    messages.forEach((message) => {\n      switch (message.type) {\n        case \"metadata\":\n          this.#handleMetadataMessage(rootUuid, message.data);\n          return;\n        case \"step_metadata\":\n          this.#handleStepMetadataMessage(rootUuid, message.data);\n          return;\n        case \"step_start\":\n          this.#handleStartStepMessage(rootUuid, message.data);\n          return;\n        case \"step_stop\":\n          this.#handleStopStepMessage(rootUuid, message.data);\n          return;\n        case \"attachment_content\":\n          this.#handleAttachmentContentMessage(rootUuid, message.data);\n          return;\n        case \"attachment_path\":\n          this.#handleAttachmentPathMessage(rootUuid, message.data);\n          return;\n        default:\n          // eslint-disable-next-line no-console\n          console.error(`could not apply runtime messages: unknown message ${JSON.stringify(message)}`);\n          return;\n      }\n    });\n  };\n\n  #handleMetadataMessage = (rootUuid: string, message: RuntimeMetadataMessage[\"data\"]) => {\n    // only display name could be set to fixture.\n    const fixtureResult = this.state.getWrappedFixtureResult(rootUuid);\n    const { links, labels, parameters, displayName, testCaseId, historyId, description, descriptionHtml } = message;\n\n    if (fixtureResult) {\n      if (displayName) {\n        this.updateFixture(rootUuid, (result) => {\n          result.name = displayName;\n        });\n      }\n\n      if (historyId) {\n        // eslint-disable-next-line no-console\n        console.error(\"historyId can't be changed within test fixtures\");\n      }\n      if (testCaseId) {\n        // eslint-disable-next-line no-console\n        console.error(\"testCaseId can't be changed within test fixtures\");\n      }\n\n      if (links || labels || parameters || description || descriptionHtml) {\n        // in some frameworks, afterEach methods can be executed before test stop event, while\n        // in others after. To remove the possible undetermined behaviour we only allow\n        // using runtime metadata API in before hooks.\n        if (fixtureResult.type === \"after\") {\n          // eslint-disable-next-line no-console\n          console.error(\"metadata messages isn't supported for after test fixtures\");\n          return;\n        }\n\n        this.updateScope(fixtureResult.scopeUuid, (scope) => {\n          if (links) {\n            scope.links = [...scope.links, ...(this.linkConfig ? formatLinks(this.linkConfig, links) : links)];\n          }\n          if (labels) {\n            scope.labels = [...scope.labels, ...labels];\n          }\n          if (parameters) {\n            scope.parameters = [...scope.parameters, ...parameters];\n          }\n          if (description) {\n            scope.description = description;\n          }\n          if (descriptionHtml) {\n            scope.descriptionHtml = descriptionHtml;\n          }\n        });\n      }\n\n      return;\n    }\n\n    this.updateTest(rootUuid, (result) => {\n      if (links) {\n        result.links = [...result.links, ...(this.linkConfig ? formatLinks(this.linkConfig, links) : links)];\n      }\n      if (labels) {\n        result.labels = [...result.labels, ...labels];\n      }\n      if (parameters) {\n        result.parameters = [...result.parameters, ...parameters];\n      }\n      if (displayName) {\n        result.name = displayName;\n      }\n      if (testCaseId) {\n        result.testCaseId = testCaseId;\n      }\n      if (historyId) {\n        result.historyId = historyId;\n      }\n      if (description) {\n        result.description = description;\n      }\n      if (descriptionHtml) {\n        result.descriptionHtml = descriptionHtml;\n      }\n    });\n  };\n\n  #handleStepMetadataMessage = (rootUuid: string, message: RuntimeStepMetadataMessage[\"data\"]) => {\n    const stepUuid = this.currentStep(rootUuid);\n    if (!stepUuid) {\n      // eslint-disable-next-line no-console\n      console.error(\"could not handle step metadata message: no step is running\");\n      return;\n    }\n    const { name, parameters } = message;\n    this.updateStep(stepUuid, (stepResult) => {\n      if (name) {\n        stepResult.name = name;\n      }\n      if (parameters) {\n        stepResult.parameters = [...stepResult.parameters, ...parameters];\n      }\n    });\n  };\n\n  #handleStartStepMessage = (rootUuid: string, message: RuntimeStartStepMessage[\"data\"]) => {\n    this.startStep(rootUuid, undefined, { ...message });\n  };\n\n  #handleStopStepMessage = (rootUuid: string, message: RuntimeStopStepMessage[\"data\"]) => {\n    const stepUuid = this.currentStep(rootUuid);\n    if (!stepUuid) {\n      // eslint-disable-next-line no-console\n      console.error(\"could not handle step stop message: no step is running\");\n      return;\n    }\n    this.updateStep(stepUuid, (result) => {\n      if (message.status && !result.status) {\n        result.status = message.status;\n      }\n      if (message.statusDetails) {\n        result.statusDetails = { ...result.statusDetails, ...message.statusDetails };\n      }\n    });\n    this.stopStep(stepUuid, { stop: message.stop });\n  };\n\n  #handleAttachmentContentMessage = (rootUuid: string, message: RuntimeAttachmentContentMessage[\"data\"]) => {\n    this.writeAttachment(rootUuid, undefined, message.name, Buffer.from(message.content, message.encoding), {\n      encoding: message.encoding,\n      contentType: message.contentType,\n      fileExtension: message.fileExtension,\n      wrapInStep: message.wrapInStep,\n      timestamp: message.timestamp,\n    });\n  };\n\n  #handleAttachmentPathMessage = (rootUuid: string, message: RuntimeAttachmentPathMessage[\"data\"]) => {\n    this.writeAttachment(rootUuid, undefined, message.name, message.path, {\n      contentType: message.contentType,\n      fileExtension: message.fileExtension,\n      wrapInStep: message.wrapInStep,\n      timestamp: message.timestamp,\n    });\n  };\n\n  #findParent = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n  ): FixtureResult | TestResult | StepResult | undefined => {\n    const root = this.state.getExecutionItem(rootUuid);\n    if (!root) {\n      return;\n    }\n\n    if (parentStepUuid === null) {\n      return root;\n    } else if (parentStepUuid === undefined) {\n      const stepUuid = this.currentStep(rootUuid);\n      return stepUuid ? this.state.getStepResult(stepUuid) : root;\n    } else {\n      return this.state.getStepResult(parentStepUuid);\n    }\n  };\n\n  #writeFixturesOfScope = ({ fixtures, tests }: TestScope) => {\n    const writtenFixtures = new Set<string>();\n    if (tests.length) {\n      for (const wrappedFixture of fixtures) {\n        if (!writtenFixtures.has(wrappedFixture.uuid)) {\n          this.#writeContainer(tests, wrappedFixture);\n          this.state.deleteFixtureResult(wrappedFixture.uuid);\n          writtenFixtures.add(wrappedFixture.uuid);\n        }\n      }\n    }\n  };\n\n  #writeContainer = (tests: string[], wrappedFixture: FixtureResultWrapper) => {\n    const fixture = wrappedFixture.value;\n    const befores = wrappedFixture.type === \"before\" ? [wrappedFixture.value] : [];\n    const afters = wrappedFixture.type === \"after\" ? [wrappedFixture.value] : [];\n    this.writer.writeGroup({\n      uuid: wrappedFixture.uuid,\n      name: fixture.name,\n      children: [...new Set(tests)],\n      befores,\n      afters,\n    });\n  };\n\n  #calculateTimings = (start?: number, stop?: number, duration?: number): { start?: number; stop?: number } => {\n    const result: { start?: number; stop?: number } = { start, stop };\n    if (duration) {\n      const normalisedDuration = Math.max(0, duration);\n      if (result.stop !== undefined) {\n        result.start = result.stop - normalisedDuration;\n      } else if (result.start !== undefined) {\n        result.stop = result.start + normalisedDuration;\n      } else {\n        result.stop = Date.now();\n        result.start = result.stop - normalisedDuration;\n      }\n    } else {\n      if (result.stop === undefined) {\n        result.stop = Date.now();\n      }\n      if (result.start === undefined) {\n        result.start = result.stop;\n      }\n    }\n    return {\n      start: result.start ? Math.round(result.start) : undefined,\n      stop: result.stop ? Math.round(result.stop) : undefined,\n    };\n  };\n}\n"],"mappings":"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","ignoreList":[]}